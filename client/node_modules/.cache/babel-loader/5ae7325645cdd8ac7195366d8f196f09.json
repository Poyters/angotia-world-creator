{"ast":null,"code":"import _objectSpread from \"/home/kostek/Documents/Programming/angotia-map-creator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/kostek/Documents/Programming/angotia-map-creator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kostek/Documents/Programming/angotia-map-creator/src/components/partials/creatorPanel/passage/PassagePopup.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'; //Import scripts\n\nimport { deepCopy, matrixToIds } from '../../../../assets/scripts/matrix';\nimport { markSquare } from '../../../../assets/scripts/markSquare'; //Import actions\n\nimport { changeMapPassageMatrix, changeMapPassageLocations } from '../../../../redux/actions/mapActions';\n\nvar PassageOption = function PassageOption(_ref) {\n  var closePopup = _ref.closePopup;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      mapTargetId = _useState2[0],\n      setMapTargetId = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mapTargetCords = _useState4[0],\n      setMapTargetCords = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var selectMatrix = deepCopy(useSelector(function (state) {\n    return state.map.select.matrix;\n  }));\n  var passageMatrix = useSelector(function (state) {\n    return state.map.passage.matrix;\n  });\n  var passageLocations = deepCopy(useSelector(function (state) {\n    return state.map.passage.locations;\n  }));\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (!mapTargetId || !mapTargetCords) setError(true);else setError(false);\n  }, [mapTargetId, mapTargetCords]);\n\n  var insertPassage = function insertPassage() {\n    var potentialLocations = matrixToIds(selectMatrix);\n    potentialLocations.forEach(function (location) {\n      if (!passageLocations.some(function (e) {\n        return e.id === location.id;\n      })) {\n        var newLocation = _objectSpread({}, location, {\n          destination: {\n            mapTargetId: mapTargetId,\n            mapTargetCords: mapTargetCords\n          }\n        });\n\n        passageLocations.push(newLocation);\n      }\n    });\n    closePopup(false);\n    dispatch(changeMapPassageLocations(passageLocations));\n    markSquare(passageMatrix, 'mapPassageCanvas', changeMapPassageMatrix, 'Passage added', '#fff', '');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"g-container g-container--popup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    role: \"alert\",\n    className: \"insertPopup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"insertPopup__header t-paragraph3Light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" Add passage \"), React.createElement(\"label\", {\n    className: \"insertPopup__label t-paragraph6Light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Target map id \"), React.createElement(\"input\", {\n    type: \"text\",\n    value: mapTargetId,\n    onChange: function onChange(e) {\n      return setMapTargetId(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"insertPopup__label t-paragraph6Light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Target map coordinations \"), React.createElement(\"input\", {\n    type: \"text\",\n    value: mapTargetCords,\n    onChange: function onChange(e) {\n      return setMapTargetCords(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), error ? React.createElement(\"span\", {\n    className: \"insertPopup--error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Fill all fields\") : null, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"insertPopup__submit t-paragraphLight\",\n    onClick: function onClick() {\n      return insertPassage();\n    },\n    disabled: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \" submit \")));\n};\n\nexport default PassageOption;","map":{"version":3,"sources":["/home/kostek/Documents/Programming/angotia-map-creator/src/components/partials/creatorPanel/passage/PassagePopup.tsx"],"names":["React","useState","useEffect","useSelector","useDispatch","deepCopy","matrixToIds","markSquare","changeMapPassageMatrix","changeMapPassageLocations","PassageOption","closePopup","mapTargetId","setMapTargetId","mapTargetCords","setMapTargetCords","error","setError","selectMatrix","state","map","select","matrix","passageMatrix","passage","passageLocations","locations","dispatch","insertPassage","potentialLocations","forEach","location","some","e","id","newLocation","destination","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n//Import scripts\nimport { deepCopy, matrixToIds } from '../../../../assets/scripts/matrix';\nimport { markSquare } from '../../../../assets/scripts/markSquare';\n\n//Import actions\nimport { changeMapPassageMatrix, changeMapPassageLocations } from '../../../../redux/actions/mapActions';\n\n\ninterface IPassageOption {\n    closePopup: Function\n}\n\nconst PassageOption: React.FC<IPassageOption> = ({ closePopup }) => {\n    const [mapTargetId, setMapTargetId] = useState<string>(\"\");\n    const [mapTargetCords, setMapTargetCords] = useState<string>(\"\");\n    const [error, setError] = useState<boolean>(false);\n    const selectMatrix = deepCopy(useSelector(state => state.map.select.matrix));\n    const passageMatrix = useSelector(state => state.map.passage.matrix);\n    const passageLocations = deepCopy(useSelector(state => state.map.passage.locations));\n    const dispatch = useDispatch(); \n\n    useEffect(() => {\n        if (!mapTargetId || !mapTargetCords) setError(true);\n        else setError(false);\n\n    }, [mapTargetId, mapTargetCords])\n\n    const insertPassage = () => {\n        const potentialLocations = matrixToIds(selectMatrix);\n        potentialLocations.forEach(location => {\n            if (!passageLocations.some(e => e.id === location.id)) {\n                const newLocation = {\n                    ...location,\n                    destination: {\n                        mapTargetId,\n                        mapTargetCords\n                    }\n                }\n\n                passageLocations.push(newLocation);\n              }\n        })\n\n        closePopup(false);\n        dispatch(changeMapPassageLocations(passageLocations));\n        markSquare(passageMatrix, 'mapPassageCanvas', changeMapPassageMatrix, 'Passage added', '#fff', '')\n    }\n\n    return (\n        <div className=\"g-container g-container--popup\">\n            <div role=\"alert\" className=\"insertPopup\"> \n                <header className=\"insertPopup__header t-paragraph3Light\"> Add passage </header>\n                <label className=\"insertPopup__label t-paragraph6Light\">Target map id </label>\n                <input type='text' value={mapTargetId} onChange={e => setMapTargetId(e.target.value)}/>\n                <label className=\"insertPopup__label t-paragraph6Light\">Target map coordinations </label>\n                <input type='text' value={mapTargetCords} onChange={e => setMapTargetCords(e.target.value)}/>\n                {\n                    (error) ? (\n                        <span className=\"insertPopup--error\">Fill all fields</span>\n                    ) : null\n                }\n\n                <button type=\"submit\" className=\"insertPopup__submit t-paragraphLight\" onClick={() => insertPassage()} disabled={error}> submit </button>\n            </div>\n        </div>\n    )\n}\n\n\nexport default PassageOption;"]},"metadata":{},"sourceType":"module"}