{"ast":null,"code":"import _toConsumableArray from \"/home/kostek/Documents/Programming/angotia-map-creator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { store } from '../../App'; //Import configs\n\nimport creatorConfig from '../configs/creatorConfig.json'; //Import actions\n\nimport { changeMapSelectMatrix } from '../../redux/actions/mapActions'; //Import interfaces\n\n//Import scripts\nimport { selectCanvasSquare } from './selectFields';\nimport { colorBasedOnMatrix } from './colorBasedOnMatrix';\nvar canvas;\nvar ctx;\nvar rect = {};\nvar drag = false;\nexport var mouseSelectFields = function mouseSelectFields() {\n  var map = document.getElementById(\"map\");\n  canvas = document.getElementById('mapSelectCanvas');\n  ctx = canvas.getContext('2d');\n  canvas.addEventListener('mousedown', function (event) {\n    return mouseDown(event, map);\n  }, false);\n  canvas.addEventListener('mouseup', mouseUp, false);\n  canvas.addEventListener('mousemove', function (event) {\n    return mouseMove(event, map);\n  }, false);\n};\n\nvar mouseDown = function mouseDown(event, map) {\n  var storeData = store.getState();\n  var selectType = storeData.map.select.type;\n  var mapLeft = parseInt(map.style.left) || 0;\n  var mapTop = parseInt(map.style.top) || 0;\n  if (selectType !== \"mouse\") return;\n  rect.startX = event.clientX - mapLeft;\n  rect.startY = event.clientY - mapTop;\n  drag = true;\n};\n\nvar mouseUp = function mouseUp() {\n  var storeData = store.getState();\n  var selectType = storeData.map.select.type;\n  if (selectType !== \"mouse\") return;\n  var rectanglePosition = {\n    topLeft: {\n      x: rect.startX,\n      y: rect.startY\n    },\n    bottomRight: {\n      x: rect.startX + rect.width,\n      y: rect.startY + rect.height\n    }\n  };\n  colorSquares(rectanglePosition);\n  drag = false;\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n};\n\nvar mouseMove = function mouseMove(event, map) {\n  var storeData = store.getState();\n  var selectType = storeData.map.select.type;\n  var mapLeft = parseInt(map.style.left) || 0;\n  var mapTop = parseInt(map.style.top) || 0;\n  if (selectType !== \"mouse\" || !drag) return;\n  rect.width = event.clientX - mapLeft - rect.startX;\n  rect.height = event.clientY - mapTop - rect.startY;\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  draw();\n};\n\nvar draw = function draw() {\n  var storeData = store.getState();\n\n  var selectMatrix = _toConsumableArray(storeData.map.select.matrix);\n\n  ctx.fillStyle = creatorConfig.selectColor;\n  ctx.fillRect(rect.startX, rect.startY, rect.width, rect.height);\n  colorBasedOnMatrix(selectMatrix, 'mapSelectCanvas', creatorConfig.selectColor);\n};\n\nvar colorSquares = function colorSquares(rectanglePosition) {\n  var storeData = store.getState();\n\n  var selectMatrix = _toConsumableArray(storeData.map.select.matrix);\n\n  var fieldSize = creatorConfig.map.fieldSize;\n  var rectangleSquarePoints = {\n    topLeft: {\n      x: Math.floor(rectanglePosition.topLeft.x / (fieldSize / 2)),\n      y: Math.floor(rectanglePosition.topLeft.y / (fieldSize / 2))\n    },\n    bottomRight: {\n      x: Math.floor(rectanglePosition.bottomRight.x / (fieldSize / 2)),\n      y: Math.floor(rectanglePosition.bottomRight.y / (fieldSize / 2))\n    } //We need to find out real topLeft and bottomRight corner (due to reverse drawing)\n\n  };\n  var xSmaller = rectangleSquarePoints.topLeft.x < rectangleSquarePoints.bottomRight.x ? rectangleSquarePoints.topLeft.x : rectangleSquarePoints.bottomRight.x;\n  var xBigger = rectangleSquarePoints.topLeft.x > rectangleSquarePoints.bottomRight.x ? rectangleSquarePoints.topLeft.x : rectangleSquarePoints.bottomRight.x;\n  var ySmaller = rectangleSquarePoints.topLeft.y < rectangleSquarePoints.bottomRight.y ? rectangleSquarePoints.topLeft.y : rectangleSquarePoints.bottomRight.y;\n  var yBigger = rectangleSquarePoints.topLeft.y > rectangleSquarePoints.bottomRight.y ? rectangleSquarePoints.topLeft.y : rectangleSquarePoints.bottomRight.y;\n\n  for (var x = xSmaller; x < xBigger + 1; x++) {\n    for (var y = ySmaller; y < yBigger + 1; y++) {\n      var recSquarePoints = {\n        x: x,\n        y: y\n      };\n      selectCanvasSquare(selectMatrix, recSquarePoints);\n    }\n  }\n\n  selectCanvasSquare(selectMatrix, rectangleSquarePoints.topLeft);\n  store.dispatch(changeMapSelectMatrix(selectMatrix));\n  setTimeout(function () {\n    colorBasedOnMatrix(selectMatrix, 'mapSelectCanvas', creatorConfig.selectColor); //TODO: make it async\n  }, 20);\n};","map":{"version":3,"sources":["/home/kostek/Documents/Programming/angotia-map-creator/src/assets/scripts/mouseSelectFields.ts"],"names":["store","creatorConfig","changeMapSelectMatrix","selectCanvasSquare","colorBasedOnMatrix","canvas","ctx","rect","drag","mouseSelectFields","map","document","getElementById","getContext","addEventListener","event","mouseDown","mouseUp","mouseMove","storeData","getState","selectType","select","type","mapLeft","parseInt","style","left","mapTop","top","startX","clientX","startY","clientY","rectanglePosition","topLeft","x","y","bottomRight","width","height","colorSquares","clearRect","draw","selectMatrix","matrix","fillStyle","selectColor","fillRect","fieldSize","rectangleSquarePoints","Math","floor","xSmaller","xBigger","ySmaller","yBigger","recSquarePoints","dispatch","setTimeout"],"mappings":"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","sourcesContent":["import { store } from '../../App';\n\n//Import configs\nimport creatorConfig from '../configs/creatorConfig.json';\n\n//Import actions\nimport { changeMapSelectMatrix } from '../../redux/actions/mapActions';\n\n//Import interfaces\nimport { IPoint } from '../interfaces/pointInterfaces';\n\n//Import scripts\nimport { selectCanvasSquare } from './selectFields';\nimport { colorBasedOnMatrix } from './colorBasedOnMatrix';\n\n\nlet canvas: any;\nlet ctx: any;\nlet rect: any = {};\nlet drag: boolean = false;\n\ninterface IRectanglePosition {\n  topLeft: IPoint,\n  bottomRight: IPoint\n}\n\nexport const mouseSelectFields = () => {\n  const map: any = document.getElementById(\"map\");\n\tcanvas = document.getElementById('mapSelectCanvas');\n  ctx = canvas.getContext('2d');\n\t\n\tcanvas.addEventListener('mousedown', event => mouseDown(event, map), false);\n  canvas.addEventListener('mouseup', mouseUp, false);\n  canvas.addEventListener('mousemove', event => mouseMove(event, map), false);\n}\n\n\nconst mouseDown = (event: React.MouseEvent<HTMLElement>, map: any) => {\n\tconst storeData = store.getState();\n  const selectType: string = storeData.map.select.type;\n  const mapLeft = parseInt(map.style.left) || 0;\n  const mapTop = parseInt(map.style.top) || 0;\n\t\n\tif (selectType !== \"mouse\") return;\n\n  rect.startX = event.clientX - mapLeft;\n  rect.startY = event.clientY - mapTop;\n  drag = true;\n}\n\n\nconst mouseUp = () => {\n\tconst storeData = store.getState();\n  const selectType: string = storeData.map.select.type;\n\t\n  if (selectType !== \"mouse\") return;\n  \n  const rectanglePosition: IRectanglePosition = {\n    topLeft: {\n      x: rect.startX,\n      y: rect.startY\n    },\n    bottomRight: {\n      x: rect.startX + rect.width,\n      y: rect.startY + rect.height\n    }\n  }\n\n  colorSquares(rectanglePosition);\n  \n  drag = false;\n  ctx.clearRect(0,0,canvas.width,canvas.height);\n}\n\n\nconst mouseMove = (event: React.MouseEvent<HTMLElement>, map: any) => {\n  const storeData = store.getState();\n  const selectType: string = storeData.map.select.type;\n  const mapLeft = parseInt(map.style.left) || 0;\n  const mapTop = parseInt(map.style.top) || 0;\n\t\n\tif (selectType !== \"mouse\" || !drag) return;\n\n  rect.width = (event.clientX - mapLeft) - rect.startX;\n  rect.height = (event.clientY - mapTop) - rect.startY;\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  draw();\n}\n\nconst draw = () => {\n  const storeData = store.getState();\n  const selectMatrix: any[] = [...storeData.map.select.matrix];\n\n  ctx.fillStyle = creatorConfig.selectColor;\n  ctx.fillRect(rect.startX, rect.startY, rect.width, rect.height);\n\n  colorBasedOnMatrix(selectMatrix, 'mapSelectCanvas', creatorConfig.selectColor);\n}\n\n\nconst colorSquares = (rectanglePosition) => {\n  const storeData = store.getState();\n  const selectMatrix: any[] = [...storeData.map.select.matrix];\n  const fieldSize = creatorConfig.map.fieldSize;\n\n  const rectangleSquarePoints: IRectanglePosition = {\n    topLeft: {\n      x: Math.floor(rectanglePosition.topLeft.x / (fieldSize / 2)),\n      y: Math.floor(rectanglePosition.topLeft.y / (fieldSize / 2))\n    },\n    bottomRight: {\n      x: Math.floor(rectanglePosition.bottomRight.x / (fieldSize / 2)),\n      y: Math.floor(rectanglePosition.bottomRight.y / (fieldSize / 2))\n    }\n  }\n\n  //We need to find out real topLeft and bottomRight corner (due to reverse drawing)\n  const xSmaller = rectangleSquarePoints.topLeft.x < rectangleSquarePoints.bottomRight.x ? rectangleSquarePoints.topLeft.x : rectangleSquarePoints.bottomRight.x;\n  const xBigger = rectangleSquarePoints.topLeft.x > rectangleSquarePoints.bottomRight.x ? rectangleSquarePoints.topLeft.x : rectangleSquarePoints.bottomRight.x;\n  const ySmaller = rectangleSquarePoints.topLeft.y < rectangleSquarePoints.bottomRight.y ? rectangleSquarePoints.topLeft.y : rectangleSquarePoints.bottomRight.y;\n  const yBigger = rectangleSquarePoints.topLeft.y > rectangleSquarePoints.bottomRight.y ? rectangleSquarePoints.topLeft.y : rectangleSquarePoints.bottomRight.y;\n\n  for (let x = xSmaller; x < xBigger + 1; x++) {\n    for (let y = ySmaller; y < yBigger + 1; y++) {\n\n      const recSquarePoints: IPoint = {\n        x: x,\n        y: y\n      }\n\n      selectCanvasSquare(selectMatrix, recSquarePoints);\n    }\n  }\n\n  selectCanvasSquare(selectMatrix, rectangleSquarePoints.topLeft);\n  store.dispatch(changeMapSelectMatrix(selectMatrix));\n\n  setTimeout(() => {\n    colorBasedOnMatrix(selectMatrix, 'mapSelectCanvas', creatorConfig.selectColor); //TODO: make it async\n  }, 20);\n}"]},"metadata":{},"sourceType":"module"}