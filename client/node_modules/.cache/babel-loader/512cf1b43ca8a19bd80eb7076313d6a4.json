{"ast":null,"code":"import { store } from '../../App'; //Import configs\n\nimport creatorConfig from '../configs/creatorConfig.json'; //Import interfaces\n\nvar fieldSize = creatorConfig.map.fieldSize;\nexport var drawMapNet = function drawMapNet(ctx, type) {\n  var storeData = store.getState();\n  var mapSize = storeData.map.size;\n  var mapSizeX = mapSize.x * fieldSize;\n  var mapSizeY = mapSize.y * fieldSize;\n  var divider = type === 0 ? 1 : 2;\n  ctx.beginPath();\n\n  if (type === 0) {\n    //field\n    ctx.setLineDash([]);\n    ctx.strokeStyle = \"#bbb\";\n  } else {\n    //square\n    ctx.setLineDash([2, 6]);\n    ctx.strokeStyle = \"#666\";\n  }\n\n  ctx.lineWidth = 1;\n\n  for (var x = fieldSize / divider; x < mapSizeX; x += fieldSize / divider) {\n    ctx.moveTo(x, 0);\n    ctx.lineTo(x, mapSizeY);\n    ctx.closePath();\n  }\n\n  for (var y = fieldSize / divider; y < mapSizeY; y += fieldSize / divider) {\n    ctx.moveTo(0, y);\n    ctx.lineTo(mapSizeX, y);\n    ctx.closePath();\n  }\n\n  ctx.closePath();\n  ctx.stroke();\n};","map":{"version":3,"sources":["/home/kostek/Documents/Programming/angotia-map-creator/src/assets/scripts/drawNetMap.ts"],"names":["store","creatorConfig","fieldSize","map","drawMapNet","ctx","type","storeData","getState","mapSize","size","mapSizeX","x","mapSizeY","y","divider","beginPath","setLineDash","strokeStyle","lineWidth","moveTo","lineTo","closePath","stroke"],"mappings":"AAAA,SAASA,KAAT,QAAsB,WAAtB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,+BAA1B,C,CAEA;;AAIA,IAAMC,SAAiB,GAAGD,aAAa,CAACE,GAAd,CAAkBD,SAA5C;AAEA,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAWC,IAAX,EAA4B;AACpD,MAAMC,SAAS,GAAGP,KAAK,CAACQ,QAAN,EAAlB;AACA,MAAMC,OAAiB,GAAGF,SAAS,CAACJ,GAAV,CAAcO,IAAxC;AAEA,MAAMC,QAAgB,GAAGF,OAAO,CAACG,CAAR,GAAUV,SAAnC;AACA,MAAMW,QAAgB,GAAGJ,OAAO,CAACK,CAAR,GAAUZ,SAAnC;AACA,MAAMa,OAAe,GAAGT,IAAI,KAAK,CAAT,GAAa,CAAb,GAAiB,CAAzC;AAEAD,EAAAA,GAAG,CAACW,SAAJ;;AAEA,MAAIV,IAAI,KAAK,CAAb,EAAgB;AAAE;AAChBD,IAAAA,GAAG,CAACY,WAAJ,CAAgB,EAAhB;AACAZ,IAAAA,GAAG,CAACa,WAAJ,GAAkB,MAAlB;AACD,GAHD,MAIK;AAAE;AACLb,IAAAA,GAAG,CAACY,WAAJ,CAAgB,CAAC,CAAD,EAAI,CAAJ,CAAhB;AACAZ,IAAAA,GAAG,CAACa,WAAJ,GAAkB,MAAlB;AACD;;AACDb,EAAAA,GAAG,CAACc,SAAJ,GAAgB,CAAhB;;AAGA,OAAK,IAAIP,CAAS,GAAGV,SAAS,GAACa,OAA/B,EAAwCH,CAAC,GAACD,QAA1C,EAAoDC,CAAC,IAAEV,SAAS,GAACa,OAAjE,EAA0E;AACxEV,IAAAA,GAAG,CAACe,MAAJ,CAAWR,CAAX,EAAc,CAAd;AACAP,IAAAA,GAAG,CAACgB,MAAJ,CAAWT,CAAX,EAAcC,QAAd;AACAR,IAAAA,GAAG,CAACiB,SAAJ;AACD;;AAED,OAAK,IAAIR,CAAQ,GAAGZ,SAAS,GAACa,OAA9B,EAAuCD,CAAC,GAACD,QAAzC,EAAmDC,CAAC,IAAEZ,SAAS,GAACa,OAAhE,EAAyE;AACvEV,IAAAA,GAAG,CAACe,MAAJ,CAAW,CAAX,EAAcN,CAAd;AACAT,IAAAA,GAAG,CAACgB,MAAJ,CAAWV,QAAX,EAAqBG,CAArB;AACAT,IAAAA,GAAG,CAACiB,SAAJ;AACD;;AAEDjB,EAAAA,GAAG,CAACiB,SAAJ;AACAjB,EAAAA,GAAG,CAACkB,MAAJ;AACD,CAnCM","sourcesContent":["import { store } from '../../App';\n\n//Import configs\nimport creatorConfig from '../configs/creatorConfig.json';\n\n//Import interfaces\nimport { IMapSize } from '../interfaces/mapInterfaces';\n\n\nconst fieldSize: number = creatorConfig.map.fieldSize;\n\nexport const drawMapNet = (ctx: any, type: number) => {\n  const storeData = store.getState();\n  const mapSize: IMapSize = storeData.map.size;\n\n  const mapSizeX: number = mapSize.x*fieldSize;\n  const mapSizeY: number = mapSize.y*fieldSize;\n  const divider: number = type === 0 ? 1 : 2;\n    \n  ctx.beginPath();\n\n  if (type === 0) { //field\n    ctx.setLineDash([]);\n    ctx.strokeStyle = \"#bbb\";\n  } \n  else { //square\n    ctx.setLineDash([2, 6]);\n    ctx.strokeStyle = \"#666\";\n  } \n  ctx.lineWidth = 1;\n\n\n  for (let x: number = fieldSize/divider; x<mapSizeX; x+=fieldSize/divider) {\n    ctx.moveTo(x, 0);\n    ctx.lineTo(x, mapSizeY);\n    ctx.closePath();\n  }\n\n  for (let y:number = fieldSize/divider; y<mapSizeY; y+=fieldSize/divider) {\n    ctx.moveTo(0, y);\n    ctx.lineTo(mapSizeX, y);\n    ctx.closePath();\n  }\n\n  ctx.closePath();\n  ctx.stroke();\n}"]},"metadata":{},"sourceType":"module"}