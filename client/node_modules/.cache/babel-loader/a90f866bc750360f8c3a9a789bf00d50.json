{"ast":null,"code":"import _slicedToArray from \"/home/kostek/Documents/Programming/angotia-map-creator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kostek/Documents/Programming/angotia-map-creator/src/components/partials/filesPanel/FilesPanel.tsx\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'; //Import configs\n\nimport creatorConfig from '../../../assets/configs/creatorConfig.json'; //Import scripts\n\nimport { markSquare } from '../../../assets/scripts/markSquare';\nimport { generateEmptyMapMatrix } from '../../../assets/scripts/map';\nimport { deepCopy } from '../../../assets/scripts/matrix'; //Import components\n\nimport Arrow from '../Arrow'; //Import images\n\nimport test1 from '../../../assets/images/mapSources/building/test1.png';\nimport test1min from '../../../assets/images/mapSources/building/test1min.png';\nimport test2 from '../../../assets/images/mapSources/decoration/test2.png';\nimport test3 from '../../../assets/images/mapSources/mob/test3.png';\nimport test4 from '../../../assets/images/mapSources/npc/test4.png';\nimport test5 from '../../../assets/images/mapSources/subsoil/test3.png'; //Import actions\n\nimport { changeMapBuildingMatrix, changeMapDecorationMatrix, changeMapSubsoilMatrix, changeMapNpcMatrix, changeMapMobMatrix } from '../../../redux/actions/mapActions';\nvar bookmarks = ['building', 'decoration', 'subsoil', 'npc', 'mob'];\n\nvar FilesPanel = function FilesPanel() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = useState(bookmarks[0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currBookmark = _useState4[0],\n      setCurrBookmark = _useState4[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    //Create necessary empty matrix at the beginning\n    var newEmptyMatrix = generateEmptyMapMatrix();\n    dispatch(changeMapBuildingMatrix(deepCopy(newEmptyMatrix)));\n    dispatch(changeMapDecorationMatrix(deepCopy(newEmptyMatrix)));\n    dispatch(changeMapSubsoilMatrix(deepCopy(newEmptyMatrix)));\n    dispatch(changeMapNpcMatrix(deepCopy(newEmptyMatrix)));\n    dispatch(changeMapMobMatrix(deepCopy(newEmptyMatrix)));\n  }, []);\n  var filesPanelStyles = {\n    right: isOpen ? \"0\" : \"-300px\"\n  };\n  var imageStyle = {\n    width: \"\".concat(creatorConfig.map.fieldSize, \"px\"),\n    height: \"\".concat(creatorConfig.map.fieldSize, \"px\")\n  };\n\n  var generateImages = function generateImages() {\n    var bookmarkImages = [];\n    var matrixTransformationMethod;\n    var sourceMatrix;\n    var note = '';\n\n    switch (currBookmark) {\n      case 'building':\n        bookmarkImages.push(test1); //TODO: get images from database\n\n        bookmarkImages.push(test1min); //TODO: get images from database\n\n        matrixTransformationMethod = changeMapBuildingMatrix;\n        sourceMatrix = deepCopy(useSelector(function (state) {\n          return state.map.building.matrix;\n        }));\n        note = 'Added building images';\n        break;\n\n      case 'decoration':\n        bookmarkImages.push(test2);\n        bookmarkImages.push(test2);\n        bookmarkImages.push(test2);\n        bookmarkImages.push(test2);\n        bookmarkImages.push(test2);\n        bookmarkImages.push(test2);\n        bookmarkImages.push(test2);\n        bookmarkImages.push(test2);\n        bookmarkImages.push(test2);\n        bookmarkImages.push(test2);\n        bookmarkImages.push(test2);\n        bookmarkImages.push(test2);\n        bookmarkImages.push(test2);\n        bookmarkImages.push(test2);\n        matrixTransformationMethod = changeMapDecorationMatrix;\n        sourceMatrix = deepCopy(useSelector(function (state) {\n          return state.map.decoration.matrix;\n        }));\n        note = 'Added decoration images';\n        break;\n\n      case 'subsoil':\n        bookmarkImages.push(test3);\n        matrixTransformationMethod = changeMapSubsoilMatrix;\n        sourceMatrix = deepCopy(useSelector(function (state) {\n          return state.map.subsoil.matrix;\n        }));\n        note = 'Added subsoil images';\n        break;\n\n      case 'mob':\n        bookmarkImages.push(test4);\n        matrixTransformationMethod = changeMapMobMatrix;\n        sourceMatrix = deepCopy(useSelector(function (state) {\n          return state.map.mob.matrix;\n        }));\n        note = 'Added MOBs';\n        break;\n\n      case 'npc':\n        bookmarkImages.push(test5);\n        matrixTransformationMethod = changeMapNpcMatrix;\n        sourceMatrix = deepCopy(useSelector(function (state) {\n          return state.map.npc.matrix;\n        }));\n        note = 'Added NPCs';\n        break;\n    }\n\n    var imagesToRender = bookmarkImages.map(function (img, index) {\n      return React.createElement(\"li\", {\n        key: index,\n        style: imageStyle,\n        onClick: function onClick() {\n          return markSquare(sourceMatrix, \"map\".concat(currBookmark, \"Canvas\"), matrixTransformationMethod, note, img, 'image');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: img,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }));\n    });\n    return imagesToRender;\n  };\n\n  var generateBookmarks = function generateBookmarks() {\n    var bookmarksToRender = bookmarks.map(function (bookmark, index) {\n      return React.createElement(\"li\", {\n        key: index,\n        onClick: function onClick() {\n          return setCurrBookmark(bookmark);\n        },\n        style: {\n          color: currBookmark === bookmark ? '#27427c' : 'inherit'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \" \", bookmark, \" \");\n    });\n    return bookmarksToRender;\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"filesPanelSwitch t-paragraph4Normal\",\n    onClick: function onClick() {\n      return setIsOpen(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \" Open files panel\"), React.createElement(\"aside\", {\n    className: \"filesPanelWrapper\",\n    style: filesPanelStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"filesPanel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"filesPanel__bookmarks t-paragraph5Normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, generateBookmarks())), React.createElement(\"div\", {\n    className: \"filesPanel__imagesContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, generateImages())), React.createElement(\"div\", {\n    className: \"filesPanel__switch t-paragraph4Normal\",\n    onClick: function onClick() {\n      return setIsOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Hide files panel\"), React.createElement(Arrow, {\n    additionalClass: \"arrow--filesPanel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })))));\n};\n\nexport default FilesPanel;","map":{"version":3,"sources":["/home/kostek/Documents/Programming/angotia-map-creator/src/components/partials/filesPanel/FilesPanel.tsx"],"names":["React","Fragment","useState","useEffect","useSelector","useDispatch","creatorConfig","markSquare","generateEmptyMapMatrix","deepCopy","Arrow","test1","test1min","test2","test3","test4","test5","changeMapBuildingMatrix","changeMapDecorationMatrix","changeMapSubsoilMatrix","changeMapNpcMatrix","changeMapMobMatrix","bookmarks","FilesPanel","isOpen","setIsOpen","currBookmark","setCurrBookmark","dispatch","newEmptyMatrix","filesPanelStyles","right","imageStyle","width","map","fieldSize","height","generateImages","bookmarkImages","matrixTransformationMethod","sourceMatrix","note","push","state","building","matrix","decoration","subsoil","mob","npc","imagesToRender","img","index","generateBookmarks","bookmarksToRender","bookmark","color"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n//Import configs\nimport creatorConfig from '../../../assets/configs/creatorConfig.json';\n\n//Import scripts\nimport { markSquare } from '../../../assets/scripts/markSquare';\nimport { generateEmptyMapMatrix } from '../../../assets/scripts/map';\nimport { deepCopy } from '../../../assets/scripts/matrix';\n\n//Import components\nimport Arrow from '../Arrow';\n\n//Import images\nimport test1 from '../../../assets/images/mapSources/building/test1.png';\nimport test1min from '../../../assets/images/mapSources/building/test1min.png';\nimport test2 from '../../../assets/images/mapSources/decoration/test2.png';\nimport test3 from '../../../assets/images/mapSources/mob/test3.png';\nimport test4 from '../../../assets/images/mapSources/npc/test4.png';\nimport test5 from '../../../assets/images/mapSources/subsoil/test3.png';\n\n//Import actions\nimport { changeMapBuildingMatrix, changeMapDecorationMatrix, changeMapSubsoilMatrix, changeMapNpcMatrix, changeMapMobMatrix } from '../../../redux/actions/mapActions';\n\n\nconst bookmarks: string[] = ['building', 'decoration', 'subsoil', 'npc', 'mob'];\n\nconst FilesPanel: React.FC = () => {\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n    const [currBookmark, setCurrBookmark] = useState<string>(bookmarks[0]);\n    const dispatch = useDispatch();\n  \n    useEffect((): void => { //Create necessary empty matrix at the beginning\n        const newEmptyMatrix = generateEmptyMapMatrix();\n\n        dispatch(changeMapBuildingMatrix(deepCopy(newEmptyMatrix)));\n        dispatch(changeMapDecorationMatrix(deepCopy(newEmptyMatrix)));\n        dispatch(changeMapSubsoilMatrix(deepCopy(newEmptyMatrix)));\n        dispatch(changeMapNpcMatrix(deepCopy(newEmptyMatrix)));\n        dispatch(changeMapMobMatrix(deepCopy(newEmptyMatrix)));\n    }, []);\n\n    const filesPanelStyles = {\n        right: isOpen ? \"0\" : \"-300px\"\n    }\n\n    const imageStyle = {\n        width: `${creatorConfig.map.fieldSize}px`,\n        height: `${creatorConfig.map.fieldSize}px`\n    }\n    \n    const generateImages = (): any[] => {\n        const bookmarkImages: string[] = [];\n        let matrixTransformationMethod: Function;\n        let sourceMatrix: any[];\n        let note: string = '';\n\n        switch(currBookmark) { \n            case 'building':\n                bookmarkImages.push(test1); //TODO: get images from database\n                bookmarkImages.push(test1min); //TODO: get images from database\n                matrixTransformationMethod = changeMapBuildingMatrix;\n                sourceMatrix = deepCopy(useSelector(state => state.map.building.matrix));\n                note ='Added building images';\n            break;\n            case 'decoration':\n                bookmarkImages.push(test2);\n                bookmarkImages.push(test2);\n                bookmarkImages.push(test2);\n                bookmarkImages.push(test2);\n                bookmarkImages.push(test2);\n                bookmarkImages.push(test2);\n                bookmarkImages.push(test2);\n                bookmarkImages.push(test2);\n                bookmarkImages.push(test2);\n                bookmarkImages.push(test2);\n                bookmarkImages.push(test2);\n                bookmarkImages.push(test2);\n                bookmarkImages.push(test2);\n                bookmarkImages.push(test2);\n                matrixTransformationMethod = changeMapDecorationMatrix;\n                sourceMatrix = deepCopy(useSelector(state => state.map.decoration.matrix));\n                note ='Added decoration images';\n            break;\n            case 'subsoil':\n                bookmarkImages.push(test3);\n                matrixTransformationMethod = changeMapSubsoilMatrix;\n                sourceMatrix = deepCopy(useSelector(state => state.map.subsoil.matrix));\n                note ='Added subsoil images';\n            break;\n            case 'mob':\n                bookmarkImages.push(test4);\n                matrixTransformationMethod = changeMapMobMatrix;\n                sourceMatrix = deepCopy(useSelector(state => state.map.mob.matrix));\n                note ='Added MOBs';\n            break;\n            case 'npc':\n                bookmarkImages.push(test5);\n                matrixTransformationMethod = changeMapNpcMatrix;\n                sourceMatrix = deepCopy(useSelector(state => state.map.npc.matrix));\n                note ='Added NPCs';\n            break;\n        }\n\n        const imagesToRender: any[] = bookmarkImages.map((img, index) => {\n            return (\n                <li key={index} style={imageStyle} onClick={() => markSquare(sourceMatrix, `map${currBookmark}Canvas`, matrixTransformationMethod, note, img, 'image')}>\n                    <img src={img}></img>\n                </li>\n            )\n        })\n\n        return imagesToRender;\n    }\n\n    const generateBookmarks = (): any[] => {\n        const bookmarksToRender: any[] = bookmarks.map((bookmark, index) => {\n            return <li \n                        key={index} \n                        onClick={() => setCurrBookmark(bookmark)} \n                        style={{color: currBookmark === bookmark ? '#27427c' : 'inherit'}}\n                    > {bookmark} </li>\n        });\n\n        return bookmarksToRender;\n    }\n\n    return (\n        <Fragment>\n            <div className=\"filesPanelSwitch t-paragraph4Normal\" onClick={() => setIsOpen(true)}> Open files panel</div>\n            <aside className=\"filesPanelWrapper\" style={filesPanelStyles}>\n                <div className=\"filesPanel\">\n                    <nav className=\"filesPanel__bookmarks t-paragraph5Normal\">\n                        <ul>\n                            { generateBookmarks() }\n                        </ul>\n                    </nav>\n\n                    <div className=\"filesPanel__imagesContainer\">\n                        <ul>\n                            { generateImages() }\n                        </ul>\n                    </div>\n\n                    <div className=\"filesPanel__switch t-paragraph4Normal\" onClick={() => setIsOpen(false)}>\n                        <span>Hide files panel</span>\n                        <Arrow additionalClass=\"arrow--filesPanel\"/>\n                    </div>\n                </div>\n            </aside>\n        </Fragment>\n    )\n}\n\n\nexport default FilesPanel;"]},"metadata":{},"sourceType":"module"}