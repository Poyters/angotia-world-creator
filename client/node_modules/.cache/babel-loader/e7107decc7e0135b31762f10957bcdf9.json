{"ast":null,"code":"import _objectSpread from \"/home/kostek/Documents/Programming/angotia-map-creator/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport var initState = {\n  size: {\n    x: 9,\n    y: 6\n  },\n  net: {\n    field: true,\n    square: true\n  },\n  mapPic: \"\",\n  select: {\n    type: \"none\",\n    //none, square, field, mouse\n    matrix: []\n  },\n  blockMatrix: [],\n  passage: {\n    locations: [],\n    matrix: []\n  },\n  building: {\n    matrix: []\n  },\n  decoration: {\n    matrix: []\n  },\n  subsoil: {\n    matrix: []\n  },\n  npc: {\n    matrix: [],\n    dialogs: {}\n  },\n  mob: {\n    matrix: [],\n    types: {}\n  },\n  vertex: {\n    matrix: [],\n    weights: []\n  }\n};\nexport var mapReducer = function mapReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CHANGE_MAP_SIZES':\n      return _objectSpread({}, state, {\n        size: action.sizes\n      });\n\n    case 'CHANGE_MAP_NETS':\n      return _objectSpread({}, state, {\n        net: action.values\n      });\n\n    case 'SET_MAP_BACKGROUND':\n      return _objectSpread({}, state, {\n        mapPic: action.path\n      });\n\n    case 'SET_MAP_SELECT_TYPE':\n      return _objectSpread({}, state, {\n        select: _objectSpread({}, state.select, {\n          type: action.selectType\n        })\n      });\n\n    case 'CHANGE_MAP_SELECT_MATRIX':\n      return _objectSpread({}, state, {\n        select: _objectSpread({}, state.select, {\n          matrix: action.newMatrix\n        })\n      });\n\n    case 'CHANGE_MAP_BLOCK_MATRIX':\n      return _objectSpread({}, state, {\n        blockMatrix: action.newMatrix\n      });\n\n    case 'CHANGE_MAP_PASSAGE_MATRIX':\n      return _objectSpread({}, state, {\n        passage: _objectSpread({}, state.passage, {\n          matrix: action.newMatrix\n        })\n      });\n\n    case 'CHANGE_MAP_BUILDING_MATRIX':\n      return _objectSpread({}, state, {\n        building: _objectSpread({}, state.building, {\n          matrix: action.newMatrix\n        })\n      });\n\n    case 'CHANGE_MAP_DECORATION_MATRIX':\n      return _objectSpread({}, state, {\n        decoration: _objectSpread({}, state.passage, {\n          matrix: action.newMatrix\n        })\n      });\n\n    case 'CHANGE_MAP_SUBSOIL_MATRIX':\n      return _objectSpread({}, state, {\n        subsoil: _objectSpread({}, state.subsoil, {\n          matrix: action.newMatrix\n        })\n      });\n\n    case 'CHANGE_MAP_MOB_MATRIX':\n      return _objectSpread({}, state, {\n        mob: _objectSpread({}, state.mob, {\n          matrix: action.newMatrix\n        })\n      });\n\n    case 'CHANGE_MAP_NPC_MATRIX':\n      return _objectSpread({}, state, {\n        npc: _objectSpread({}, state.npc, {\n          matrix: action.newMatrix\n        })\n      });\n\n    case 'CHANGE_MAP_VERTEX_WEIGHT_MATRIX':\n      return _objectSpread({}, state, {\n        vertex: _objectSpread({}, state.vertex, {\n          matrix: action.newMatrix\n        })\n      });\n\n    case 'CHANGE_MAP_PASSAGE_LOCATIONS':\n      return _objectSpread({}, state, {\n        passage: _objectSpread({}, state.passage, {\n          locations: action.locations\n        })\n      });\n\n    case 'CHANGE_MAP_VERTEX_WEIGHTS':\n      return _objectSpread({}, state, {\n        vertex: _objectSpread({}, state.vertex, {\n          weights: action.weights\n        })\n      });\n\n    default:\n      return state;\n  }\n};\nexport default mapReducer;","map":{"version":3,"sources":["/home/kostek/Documents/Programming/angotia-map-creator/client/src/redux/reducers/mapReducer.ts"],"names":["initState","size","x","y","net","field","square","mapPic","select","type","matrix","blockMatrix","passage","locations","building","decoration","subsoil","npc","dialogs","mob","types","vertex","weights","mapReducer","state","action","sizes","values","path","selectType","newMatrix"],"mappings":"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","sourcesContent":["export const initState = {\n    size: {\n        x: 9,\n        y: 6\n    },\n    net: {\n        field: true,\n        square: true\n    },\n    mapPic: \"\",\n    select: {\n        type: \"none\", //none, square, field, mouse\n        matrix: [],\n    },\n    blockMatrix: [],\n    passage: {\n        locations: [],\n        matrix: []\n    },\n    building: {\n        matrix: []\n    },\n    decoration: {\n        matrix: []\n    },\n    subsoil: {\n        matrix: []\n    },\n    npc: {\n        matrix: [],\n        dialogs: {}\n    },\n    mob: {\n        matrix: [],\n        types: {}\n    },\n    vertex: {\n        matrix: [],\n        weights: []\n    }\n};\n\nexport const mapReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'CHANGE_MAP_SIZES':\n            return {\n                ...state,\n                size: action.sizes\n            }\n        case 'CHANGE_MAP_NETS':\n            return {\n                ...state,\n                net: action.values\n            }\n        case 'SET_MAP_BACKGROUND':\n            return {\n                ...state,\n                mapPic: action.path\n            }\n        case 'SET_MAP_SELECT_TYPE':\n            return {\n                ...state,\n                select: {\n                    ...state.select,\n                    type: action.selectType\n                }\n            }\n        case 'CHANGE_MAP_SELECT_MATRIX':\n            return {\n                ...state,\n                select: {\n                    ...state.select,\n                    matrix: action.newMatrix\n                }\n            }\n        case 'CHANGE_MAP_BLOCK_MATRIX':\n            return {\n                ...state,\n                blockMatrix: action.newMatrix\n            }\n        case 'CHANGE_MAP_PASSAGE_MATRIX':\n            return {\n                ...state,\n                passage: {\n                    ...state.passage,\n                    matrix: action.newMatrix\n                }\n            }\n        case 'CHANGE_MAP_BUILDING_MATRIX':\n            return {\n                ...state,\n                building: {\n                    ...state.building,\n                    matrix: action.newMatrix\n                }\n            }\n        case 'CHANGE_MAP_DECORATION_MATRIX':\n            return {\n                ...state,\n                decoration: {\n                    ...state.passage,\n                    matrix: action.newMatrix\n                }\n            }\n        case 'CHANGE_MAP_SUBSOIL_MATRIX':\n            return {\n                ...state,\n                subsoil: {\n                    ...state.subsoil,\n                    matrix: action.newMatrix\n                }\n            }\n        case 'CHANGE_MAP_MOB_MATRIX':\n            return {\n                ...state,\n                mob: {\n                    ...state.mob,\n                    matrix: action.newMatrix\n                }\n            }\n        case 'CHANGE_MAP_NPC_MATRIX':\n            return {\n                ...state,\n                npc: {\n                    ...state.npc,\n                    matrix: action.newMatrix\n                }\n            }\n        case 'CHANGE_MAP_VERTEX_WEIGHT_MATRIX':\n            return {\n                ...state,\n                vertex: {\n                    ...state.vertex,\n                    matrix: action.newMatrix\n                }\n            }\n        case 'CHANGE_MAP_PASSAGE_LOCATIONS':\n            return {\n                ...state,\n                passage: {\n                    ...state.passage,\n                    locations: action.locations,\n                },\n            }\n        case 'CHANGE_MAP_VERTEX_WEIGHTS':\n                return {\n                    ...state,\n                    vertex: {\n                        ...state.vertex,\n                        weights: action.weights,\n                    },\n                }\n        default:\n            return state;\n    }\n}\n\nexport default mapReducer;"]},"metadata":{},"sourceType":"module"}